{"ast":null,"code":"var _jsxFileName = \"/Users/asdasgup/Downloads/facebook-clone/facebook-clone/src/Component/NavBar/MainPage/PostContainer/Post.js\";\nimport React, { Component } from 'react';\nimport \"./PostContainer.css\";\nimport { Paper, Avatar } from '@material-ui/core';\nimport post from \"../../../../images/post.jpeg\";\nimport like from \"../../../../images/like.png\";\nimport likebutton from \"../../../../images/likebutton.png\";\nimport commentbutton from \"../../../../images/comment.png\";\nimport sharebutton from \"../../../../images/share.png\";\nimport { getImage } from \"../../../../GetImage.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Post extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getData = () => {\n      const thisContext = this;\n      fetch(\"http://localhost:8080/api/commentService/getAllComments/\" + this.props.object.postID).then(response => response.json()).then(json => {\n        thisContext.setState({\n          comments: json\n        });\n      }).catch(error => {});\n    };\n\n    this.isImageAvailable = data => {\n      return data == \"\" ? false : true;\n    };\n\n    this.submitComment = event => {\n      if (event.key == \"Enter\") {\n        const thisContext = this;\n        let payload = {\n          \"postID\": this.props.object.postID,\n          \"userID\": JSON.parse(localStorage.getItem(\"user\")).userID,\n          \"userImage\": JSON.parse(localStorage.getItem(\"user\")).userImage,\n          \"userName\": JSON.parse(localStorage.getItem(\"user\")).userName,\n          \"comment\": this.state.comment\n        };\n        const requestOptions = {\n          method: \"POST\",\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(payload)\n        };\n        fetch(\"http://localhost:8080/api/commentService/save\", requestOptions).then(response => response.json()).then(data => {\n          thisContext.getData();\n        }).catch(error => {});\n      }\n    };\n\n    this.state = {\n      comments: [],\n      comment: null\n    };\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        className: \"post__container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post__header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post__header_img\",\n            children: /*#__PURE__*/_jsxDEV(Avatar, {\n              src: getImage(\"dp1\"),\n              className: \"post_img\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post__header_text\",\n            children: this.props.object.userName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post__description\",\n          children: this.props.object.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post__image\",\n          children: this.isImageAvailable(this.props.object.postImgURL) ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: this.props.object.postImgURL,\n            width: \"600px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 83\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 142\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post__likeCountContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post__like\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"post__img\",\n              src: like\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post__likecount\",\n            children: this.props.object.likes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post__likeShare\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post__tab\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post__tabfirst\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"post__tabimg\",\n                src: likebutton\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post__tabtext\",\n              children: \"Like\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post__tab\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post__tabfirst\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"post__tabimg\",\n                src: commentbutton\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post__tabtext\",\n              children: \"Comment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post__tab\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post__tabfirst\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"post__tabimg\",\n                src: sharebutton\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post__tabtext\",\n              children: \"Share\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload__comment\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment__section\",\n            children: this.state.comments.map((index, item) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comment\",\n              children: [index, /*#__PURE__*/_jsxDEV(Avatar, {\n                src: getImage(item.userImage),\n                className: \"comment_img\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"comment_text\",\n                children: item.comment\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"upload__top\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Avatar, {\n                src: getImage(JSON.parse(localStorage.getItem(\"user\")).userImage),\n                className: \"upload_img\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                onKeyDown: this.submitComment,\n                onChange: event => {\n                  this.state.comment = event.currentTarget.value;\n                },\n                className: \"upload__box\",\n                placeholder: \"What's on your mind ?\",\n                type: \"text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Post;","map":{"version":3,"sources":["/Users/asdasgup/Downloads/facebook-clone/facebook-clone/src/Component/NavBar/MainPage/PostContainer/Post.js"],"names":["React","Component","Paper","Avatar","post","like","likebutton","commentbutton","sharebutton","getImage","Post","constructor","props","getData","thisContext","fetch","object","postID","then","response","json","setState","comments","catch","error","isImageAvailable","data","submitComment","event","key","payload","JSON","parse","localStorage","getItem","userID","userImage","userName","state","comment","requestOptions","method","headers","body","stringify","componentDidMount","render","description","postImgURL","likes","map","index","item","currentTarget","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport \"./PostContainer.css\";\nimport { Paper, Avatar } from '@material-ui/core';\nimport post from \"../../../../images/post.jpeg\";\nimport like from \"../../../../images/like.png\";\nimport likebutton from \"../../../../images/likebutton.png\";\nimport commentbutton from \"../../../../images/comment.png\";\nimport sharebutton from \"../../../../images/share.png\";\nimport {getImage} from \"../../../../GetImage.js\";\n\nclass Post extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            comments: [],\n            comment:null\n         }\n    }\n    getData=()=>{\n        const thisContext=this;\n        fetch(\"http://localhost:8080/api/commentService/getAllComments/\"+this.props.object.postID)\n        .then(response => response.json())\n        .then(json => {\n            thisContext.setState({comments : json});\n        })\n        .catch(error =>{\n\n        })\n    }\n    componentDidMount(){\n        this.getData();\n    }\n\n    isImageAvailable=(data)=>{\n        return data==\"\"?false:true;\n    }\n\n    submitComment=(event)=>{\n        if(event.key == \"Enter\") {\n        const thisContext=this;\n        let payload = {\n            \"postID\" : this.props.object.postID,\n            \"userID\": JSON.parse(localStorage.getItem(\"user\")).userID,\n            \"userImage\": JSON.parse(localStorage.getItem(\"user\")).userImage,\n            \"userName\": JSON.parse(localStorage.getItem(\"user\")).userName,\n            \"comment\" : this.state.comment\n        }\n\n        const requestOptions ={\n            method: \"POST\",\n            headers: { 'Content-Type': 'application/json' },\n            body : JSON.stringify(payload),\n        };\n\n        fetch(\"http://localhost:8080/api/commentService/save\",requestOptions)\n        .then(response => response.json())\n        .then(data => {\n            thisContext.getData();\n\n        })\n        .catch(error =>{\n\n        })\n    }\n    }\n    render() { \n        return ( \n            <div>\n                <Paper className=\"post__container\">\n                    {/* header */}\n                    <div className=\"post__header\">\n                        <div className=\"post__header_img\">\n                            <Avatar src={getImage(\"dp1\")} className=\"post_img\" />\n                        </div>\n                        <div className=\"post__header_text\"> \n                            {this.props.object.userName}\n                        </div>\n                    </div> \n\n                    {/* description */}\n                    <div className=\"post__description\">\n                        {this.props.object.description}\n                    </div>\n                    {/* image */}\n                    <div className=\"post__image\">\n                        {\n                            this.isImageAvailable(this.props.object.postImgURL) ? <img src={this.props.object.postImgURL} width=\"600px\" /> : <span></span>\n                        }\n                    </div>\n                    {/* like count */}\n                    <div className=\"post__likeCountContainer\">\n                        <div className=\"post__like\">\n                            <img className=\"post__img\" src={like} />\n                        </div>\n                        <div className=\"post__likecount\">\n                        {this.props.object.likes}\n                        </div>\n                    </div>\n                    {/* like share box */}\n                    <div className=\"post__likeShare\">\n                        <div className=\"post__tab\">\n                            <div className=\"post__tabfirst\">\n                                <img className=\"post__tabimg\" src={likebutton} />\n                            </div>\n                            <div className=\"post__tabtext\">\n                                Like\n                            </div>\n                        </div>\n\n                        <div className=\"post__tab\">\n                            <div className=\"post__tabfirst\">\n                                <img className=\"post__tabimg\" src={commentbutton} />\n                            </div>\n                            <div className=\"post__tabtext\">\n                                Comment\n                            </div>\n                        </div>\n\n                        <div className=\"post__tab\">\n                            <div className=\"post__tabfirst\">\n                                <img className=\"post__tabimg\" src={sharebutton} />\n                            </div>\n                            <div className=\"post__tabtext\">\n                                Share\n                            </div>\n                        </div>\n                    </div>\n                    {/* comment box */}\n                    <div className=\"upload__comment\">\n                        <div className=\"comment__section\">\n                            {\n                                this.state.comments.map((index,item)=>(\n                                    <div className=\"comment\">\n                                        {index}\n                                        <Avatar src={getImage(item.userImage)} className=\"comment_img\" />\n                                        <div  className=\"comment_text\" >{item.comment}</div>\n                                    </div>\n                                ))\n                            }\n                            \n                        </div>\n                        <div className=\"upload__top\">\n                            <div>\n                                <Avatar src={getImage(JSON.parse(localStorage.getItem(\"user\")).userImage)} className=\"upload_img\"/>\n                            </div>\n                            <div>\n                                <input onKeyDown={this.submitComment} onChange={(event)=>{this.state.comment=event.currentTarget.value}}  className=\"upload__box\" placeholder=\"What's on your mind ?\" type=\"text\" />\n                            </div>\n                        </div>\n                    </div>\n                    \n                </Paper>\n            </div>\n         );\n    }\n}\n \nexport default Post;"]},"metadata":{},"sourceType":"module"}