{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar HYPHENS_POSITIONS = [8, 12, 16, 20];\nvar VALUE_REGEXP = /^[0-9A-Fa-f]{32}$/;\n/**\n * Insert value to a source array at position\n * @param {Array} source array to insert\n * @param {number} position position to insert\n * @param {*} value value to insert\n * @returns {Array}\n */\n\nfunction insert(source, position, value) {\n  return source.slice(0, position).concat([value], source.slice(position));\n}\n/**\n * Format string to UUID format\n * @param {string} value string of 32 hexadecimal numbers\n * @returns {string} formatted toUUID string\n */\n\n\nfunction toUUID(value) {\n  if (typeof value !== 'string') {\n    throw new Error(\"Value must be string\");\n  }\n\n  if (!VALUE_REGEXP.test(value)) {\n    throw new Error(\"Value must be string of 32 hexadecimal numbers\");\n  }\n\n  var array = value.split('');\n  var offset = 0;\n\n  for (var _i = 0, HYPHENS_POSITIONS_1 = HYPHENS_POSITIONS; _i < HYPHENS_POSITIONS_1.length; _i++) {\n    var num = HYPHENS_POSITIONS_1[_i];\n    var position = num + offset++;\n    array = insert(array, position, '-');\n  }\n\n  return array.join('');\n}\n\nexports.toUUID = toUUID;","map":{"version":3,"sources":["/Users/asdasgup/Downloads/facebook-clone/facebook-clone/node_modules/to-uuid/build/index.js"],"names":["Object","defineProperty","exports","value","HYPHENS_POSITIONS","VALUE_REGEXP","insert","source","position","slice","concat","toUUID","Error","test","array","split","offset","_i","HYPHENS_POSITIONS_1","length","num","join"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACA,IAAIC,iBAAiB,GAAG,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,CAAxB;AACA,IAAIC,YAAY,GAAG,mBAAnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,MAAT,CAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCL,KAAlC,EAAyC;AACrC,SAAOI,MAAM,CAACE,KAAP,CAAa,CAAb,EAAgBD,QAAhB,EAA0BE,MAA1B,CAAiC,CAACP,KAAD,CAAjC,EAA0CI,MAAM,CAACE,KAAP,CAAaD,QAAb,CAA1C,CAAP;AACH;AACD;AACA;AACA;AACA;AACA;;;AACA,SAASG,MAAT,CAAgBR,KAAhB,EAAuB;AACnB,MAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC3B,UAAM,IAAIS,KAAJ,CAAU,sBAAV,CAAN;AACH;;AACD,MAAI,CAACP,YAAY,CAACQ,IAAb,CAAkBV,KAAlB,CAAL,EAA+B;AAC3B,UAAM,IAAIS,KAAJ,CAAU,gDAAV,CAAN;AACH;;AACD,MAAIE,KAAK,GAAGX,KAAK,CAACY,KAAN,CAAY,EAAZ,CAAZ;AACA,MAAIC,MAAM,GAAG,CAAb;;AACA,OAAK,IAAIC,EAAE,GAAG,CAAT,EAAYC,mBAAmB,GAAGd,iBAAvC,EAA0Da,EAAE,GAAGC,mBAAmB,CAACC,MAAnF,EAA2FF,EAAE,EAA7F,EAAiG;AAC7F,QAAIG,GAAG,GAAGF,mBAAmB,CAACD,EAAD,CAA7B;AACA,QAAIT,QAAQ,GAAGY,GAAG,GAAGJ,MAAM,EAA3B;AACAF,IAAAA,KAAK,GAAGR,MAAM,CAACQ,KAAD,EAAQN,QAAR,EAAkB,GAAlB,CAAd;AACH;;AACD,SAAOM,KAAK,CAACO,IAAN,CAAW,EAAX,CAAP;AACH;;AACDnB,OAAO,CAACS,MAAR,GAAiBA,MAAjB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar HYPHENS_POSITIONS = [8, 12, 16, 20];\nvar VALUE_REGEXP = /^[0-9A-Fa-f]{32}$/;\n/**\n * Insert value to a source array at position\n * @param {Array} source array to insert\n * @param {number} position position to insert\n * @param {*} value value to insert\n * @returns {Array}\n */\nfunction insert(source, position, value) {\n    return source.slice(0, position).concat([value], source.slice(position));\n}\n/**\n * Format string to UUID format\n * @param {string} value string of 32 hexadecimal numbers\n * @returns {string} formatted toUUID string\n */\nfunction toUUID(value) {\n    if (typeof value !== 'string') {\n        throw new Error(\"Value must be string\");\n    }\n    if (!VALUE_REGEXP.test(value)) {\n        throw new Error(\"Value must be string of 32 hexadecimal numbers\");\n    }\n    var array = value.split('');\n    var offset = 0;\n    for (var _i = 0, HYPHENS_POSITIONS_1 = HYPHENS_POSITIONS; _i < HYPHENS_POSITIONS_1.length; _i++) {\n        var num = HYPHENS_POSITIONS_1[_i];\n        var position = num + offset++;\n        array = insert(array, position, '-');\n    }\n    return array.join('');\n}\nexports.toUUID = toUUID;\n"]},"metadata":{},"sourceType":"script"}